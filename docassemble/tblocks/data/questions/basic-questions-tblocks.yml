---
comment: |

  This section contains tha basic data gathering blocks for TrustBlocks Interviews
  
  It  defines seven objects: client, advocate, company, members, officers, directors  income, and initiator. 
---
modules:
  - docassemble.base.util
  - docassemble.tblocks.company
  - docassemble.income.income
---
#mandatory: True
objects:
  - client: Individual
  - spouse: Individual
  - officers: DAList
  - directors: DAList
  - members: DAList
  - advocate: Individual
  - pbadvocate: Individual
  - initiator: Individual
  - company: HouseholdList.using(auto_gather=False,gathered=True)
  - income: IncomeList.using(auto_gather=False,gathered=True)
  - adverse_parties: DAList.using(object_type=Person,auto_gather=False,gathered=True)
---
code: |
  directors = company.directors
  officers  = company.officers
---
generic object: Individual
question: |
  ${capitalize(x.object_possessive('name'))}
fields:
  - First name: x.name.first
  - Middle name: x.name.middle
    required: False
  - Last name: x.name.last
---
generic object: Individual
question: |
  ${capitalize(x.possessive('address'))}
fields:
  - address: x.address.address
    address autocomplete: True
  - unit: x.address.unit
    required: False
  - city: x.address.city
  - state: x.address.state
    code: |
      states_list()
    default: "MA"
  - zip: x.address.zip
  - county: x.address.county
    required: False
---
generic object: Individual
question: |
  ${capitalize(x.possessive('address'))}
fields:
  - address: x.address.address
    address autocomplete: True
  - unit: x.address.unit
    required: False
  - city: x.address.city
  - state: x.address.state
    code: |
      states_list()
    default: "MA"
  - zip: x.address.zip
---
question: |
  Who is the ${ordinal(i)} adverse party?
fields:
  - Name: adverse_parties[i].name.text
---
question: |
  Are there any other adverse parties?
subquestion: |
  So far you've told us about ${adverse_parties}
yesno: adverse_parties.there_is_another
---
generic object: Individual
question: |
  ${capitalize(x.possessive('signature'))}
signature: x.signature
---
generic object: Individual
question: |
  ${capitalize(x.possessive('Social Security Number'))} 
fields:
  - SSN: x.ssn
---
generic object: Individual
code: |
  if x.ssn:
    x.ssn_last_4 = x.ssn[-4:]
---
generic object: Individual
code: |
  x.program = ''
---
question: |
  What is the case number/docket number for this case?
fields:
  - no label: court_case_number